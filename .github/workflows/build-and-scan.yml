# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Scan
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt-get -y install libpq-dev gcc python3-dev python3
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest

  security-scan:
    runs-on: self-hosted 
    needs: build
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        id: codeql
        uses: github/codeql-action/analyze@v3
        with:
          output: sarif-results

      - name: Check CodeQL for critical vulnerabilities
        run: |
          if jq -e '.runs[0].results[] | select(.level == "error")' sarif-results/codeql.sarif; then
            echo "Critical vulnerabilities found in CodeQL scan!"
            exit 1
          fi

      - name: Run Dependabot (Dependency Scanning)
        uses: github/dependabot-action@v3
        with:
          package-ecosystem: pip
          directory: /
          schedule-interval: daily

      - name: Check Dependabot for critical vulnerabilities
        run: |
          if gh api repos/${{ github.repository }}/dependabot/alerts -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -e '.[] | select(.security_vulnerability.severity == "critical")'; then
            echo "Critical vulnerabilities found in Dependabot scan!"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: sarif-results/
